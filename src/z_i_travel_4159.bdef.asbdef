managed; //implementation in class zbp_i_travel_4159 unique;
//strict ( 2 );

define behavior for z_i_travel_4159 alias Travel
implementation in class zbp_i_travel_4159 unique
persistent table ztravel_4159
with additional save
lock master
authorization master ( instance )
etag master LastChangedAt

{

  // Administrative fields: read only
  field ( readonly ) LastChangedAt, LastChangedBy, CreatedAt, CreatedBy;
  // Mandatory fields that are required to create a travel
  field ( mandatory : create ) TravelId, AgencyId, OverallStatus, BookingFee, CurrencyCode;
  // Dynamic field control
  field ( features : instance ) TravelId, OverallStatus;

  create;
  update;
  delete;

  // Validations
  validation validateCustomer on save { create; field CustomerId; }
  validation validateDates on save { create; field BeginDate, EndDate; }
  validation validateStatus on save { create; field OverallStatus; }

  // Actions
  action ( features : instance ) acceptTravel result [1] $self;
  action ( features : instance ) rejectTravel result [1] $self;

  action createTravelByTemplate result [1] $self;

  association _Booking { create ( features : instance ); }

  mapping for ztravel_4159
    {
      TravelId      = travel_id;
      AgencyId      = agency_id;
      CustomerId    = customer_id;
      BeginDate     = begin_date;
      EndDate       = end_date;
      BookingFee    = booking_fee;
      TotalPrice    = total_price;
      CurrencyCode  = currency_code;
      Description   = description;
      OverallStatus = overall_status;
      CreatedBy     = created_by;
      CreatedAt     = created_at;
      LastChangedBy = last_changed_by;
      LastChangedAt = last_changed_at;
    }

}

define behavior for z_i_booking_4159 alias Booking
implementation in class zbp_i_booking_4159 unique
persistent table zbooking_4159
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangeAt

{

  field ( readonly ) TravelId;
  field ( mandatory : create ) BookingId, CarrierId, ConnectionId, FlightDate, BookingStatus;

  update;
  delete;

  // Validations
  validation validateStatus on save { create; field BookingStatus; }

  //Determinations
  determination calculateTotalFlightPrice on modify { field FlightPrice, CurrencyCode; }

  association _Travel;
  association _BookingSupplement { create ( features : instance ); }

  mapping for zbooking_4159
    {
      TravelId      = travel_id;
      BookingId     = booking_id;
      BookingDate   = booking_date;
      CustomerId    = customer_id;
      CarrierId     = carrier_id;
      ConnectionId  = connection_id;
      FlightDate    = flight_date;
      FlightPrice   = flight_price;
      CurrencyCode  = currency_code;
      BookingStatus = booking_status;
      LastChangeAt  = last_change_at;
    }

}

define behavior for z_i_booksuppl_4159 alias Supplement
implementation in class zbp_i_booksuppl_4159 unique
with unmanaged save
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt

{

  field ( readonly ) TravelId, BookingId;
  field ( mandatory : create ) SupplementId, Price;

  update;
  delete;

  //Determinations
  determination calculateTotalSupplPrice on modify { field Price, Currency; }

  association _Travel { }
  association _Booking;

  mapping for zlog_4159 corresponding;
}